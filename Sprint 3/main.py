import os
import random
import time
from player import Player
from dungeon import Dungeon
from combat import battle

# Load room stories safely
story_path = os.path.join(os.path.dirname(__file__), "stories.txt")
with open(story_path, "r") as file:
    room_stories = [line.strip() for line in file.readlines()]

def display_title():
    COLOUR = ["\033[38;2;255;0;0m","\033[38;2;0;255;0m","\033[38;2;0;0;255m","\033[38;2;255;255;0m","\033[38;2;0;255;255m","\033[38;2;255;0;255m","\033[38;2;255;128;0m","\033[38;2;128;0;255m","\033[38;2;255;255;255m","\033[38;2;255;192;203m","\033[38;2;255;105;180m","\033[38;2;255;20;147m","\033[38;2;199;21;133m","\033[38;2;219;112;147m","\033[38;2;255;0;127m","\033[38;2;255;69;0m","\033[38;2;255;99;71m","\033[38;2;220;20;60m","\033[38;2;0;128;0m","\033[38;2;50;205;50m","\033[38;2;34;139;34m","\033[38;2;152;251;152m","\033[38;2;144;238;144m","\033[38;2;0;255;127m","\033[38;2;46;139;87m","\033[38;2;102;205;170m","\033[38;2;32;178;170m","\033[38;2;0;0;128m","\033[38;2;65;105;225m","\033[38;2;70;130;180m","\033[38;2;100;149;237m","\033[38;2;30;144;255m","\033[38;2;0;191;255m","\033[38;2;135;206;235m","\033[38;2;173;216;230m","\033[38;2;176;224;230m","\033[38;2;25;25;112m","\033[38;2;128;0;128m","\033[38;2;75;0;130m","\033[38;2;147;112;219m","\033[38;2;138;43;226m","\033[38;2;153;50;204m","\033[38;2;186;85;211m","\033[38;2;221;160;221m","\033[38;2;238;130;238m","\033[38;2;216;191;216m","\033[38;2;255;215;0m","\033[38;2;255;255;224m","\033[38;2;250;250;210m","\033[38;2;238;232;170m","\033[38;2;189;183;107m","\033[38;2;240;230;140m","\033[38;2;255;165;0m","\033[38;2;255;140;0m","\033[38;2;210;180;140m","\033[38;2;188;143;143m","\033[38;2;244;164;96m","\033[38;2;205;133;63m","\033[38;2;160;82;45m","\033[38;2;139;69;19m","\033[38;2;165;42;42m","\033[38;2;192;192;192m","\033[38;2;169;169;169m","\033[38;2;128;128;128m","\033[38;2;105;105;105m","\033[38;2;220;220;220m","\033[38;2;245;245;245m","\033[38;2;255;250;250m","\033[38;2;255;228;196m","\033[38;2;255;218;185m","\033[38;2;255;222;173m","\033[38;2;250;235;215m","\033[38;2;253;245;230m","\033[38;2;255;239;213m","\033[38;2;255;235;205m","\033[38;2;255;228;225m","\033[38;2;255;248;220m","\033[38;2;240;255;240m","\033[38;2;245;255;250m","\033[38;2;240;255;255m","\033[38;2;230;230;250m","\033[38;2;255;240;245m","\033[38;2;248;248;255m","\033[38;2;240;248;255m","\033[38;2;255;245;238m","\033[38;2;245;245;220m","\033[38;2;255;228;181m","\033[38;2;255;160;122m","\033[38;2;233;150;122m","\033[38;2;250;128;114m","\033[38;2;205;92;92m","\033[38;2;178;34;34m","\033[38;2;139;0;0m","\033[38;2;112;128;144m","\033[38;2;119;136;153m","\033[38;2;47;79;79m","\033[38;2;0;139;139m","\033[38;2;0;128;128m","\033[38;2;72;209;204m","\033[38;2;64;224;208m","\033[38;2;0;206;209m","\033[38;2;95;158;160m","\033[38;2;175;238;238m","\033[38;2;127;255;212m","\033[38;2;102;205;170m","\033[38;2;143;188;143m","\033[38;2;60;179;113m","\033[38;2;85;107;47m","\033[38;2;107;142;35m","\033[38;2;154;205;50m","\033[38;2;127;255;0m","\033[38;2;173;255;47m","\033[38;2;255;255;240m","\033[38;2;255;250;205m","\033[38;2;250;240;230m","\033[38;2;255;228;200m","\033[38;2;139;0;139m","\033[38;2;148;0;211m","\033[38;2;153;0;153m","\033[38;2;139;0;139m","\033[38;2;255;127;80m","\033[38;2;210;105;30m","\033[38;2;139;69;19m","\033[38;2;160;82;45m","\033[38;2;205;133;63m","\033[38;2;222;184;135m","\033[38;2;245;222;179m","\033[38;2;210;180;140m","\033[38;2;255;228;181m","\033[38;2;255;222;173m","\033[38;2;255;218;185m","\033[38;2;238;213;183m","\033[38;2;255;228;196m","\033[38;2;227;207;87m","\033[38;2;218;165;32m","\033[38;2;184;134;11m","\033[38;2;139;137;112m","\033[38;2;128;128;0m","\033[38;2;85;107;47m","\033[38;2;107;142;35m","\033[38;2;154;205;50m","\033[38;2;50;205;50m","\033[38;2;34;139;34m","\033[38;2;0;100;0m","\033[38;2;0;128;0m","\033[38;2;0;255;0m","\033[38;2;124;252;0m","\033[38;2;127;255;0m","\033[38;2;173;255;47m","\033[38;2;0;255;127m","\033[38;2;0;250;154m","\033[38;2;144;238;144m","\033[38;2;152;251;152m","\033[38;2;143;188;143m","\033[38;2;60;179;113m","\033[38;2;46;139;87m","\033[38;2;0;128;128m","\033[38;2;0;139;139m","\033[38;2;32;178;170m","\033[38;2;95;158;160m","\033[38;2;70;130;180m","\033[38;2;100;149;237m","\033[38;2;30;144;255m","\033[38;2;0;191;255m","\033[38;2;135;206;235m","\033[38;2;135;206;250m","\033[38;2;25;25;112m","\033[38;2;0;0;128m","\033[38;2;65;105;225m","\033[38;2;138;43;226m","\033[38;2;75;0;130m","\033[38;2;147;112;219m","\033[38;2;186;85;211m","\033[38;2;153;50;204m","\033[38;2;148;0;211m","\033[38;2;139;0;139m","\033[38;2;199;21;133m","\033[38;2;219;112;147m","\033[38;2;255;0;255m","\033[38;2;238;130;238m","\033[38;2;221;160;221m","\033[38;2;218;112;214m","\033[38;2;216;191;216m","\033[38;2;255;182;193m","\033[38;2;255;174;185m","\033[38;2;255;130;171m","\033[38;2;255;105;180m","\033[38;2;255;20;147m","\033[38;2;255;0;127m","\033[38;2;255;192;203m","\033[38;2;219;112;147m","\033[38;2;199;21;133m","\033[38;2;208;32;144m","\033[38;2;255;0;255m","\033[38;2;238;130;238m","\033[38;2;221;160;221m","\033[38;2;255;131;250m","\033[38;2;255;52;179m","\033[38;2;255;62;150m","\033[38;2;255;102;204m","\033[38;2;255;153;204m","\033[38;2;255;204;204m","\033[38;2;255;209;220m","\033[38;2;255;221;244m","\033[38;2;255;235;238m","\033[38;2;255;240;245m","\033[38;2;255;245;238m","\033[38;2;255;250;240m","\033[38;2;253;245;230m","\033[38;2;255;255;240m","\033[38;2;255;255;224m","\033[38;2;255;255;0m","\033[38;2;255;215;0m","\033[38;2;255;223;0m","\033[38;2;255;255;102m","\033[38;2;255;255;153m","\033[38;2;255;255;204m","\033[38;2;255;250;205m","\033[38;2;250;250;210m","\033[38;2;238;232;170m","\033[38;2;240;230;140m","\033[38;2;189;183;107m","\033[38;2;255;248;220m","\033[38;2;255;236;139m","\033[38;2;238;221;130m","\033[38;2;218;165;32m","\033[38;2;184;134;11m","\033[38;2;227;207;87m","\033[38;2;255;193;37m","\033[38;2;255;165;0m","\033[38;2;255;140;0m","\033[38;2;255;127;0m","\033[38;2;255;117;24m","\033[38;2;255;69;0m","\033[38;2;255;99;71m","\033[38;2;255;160;122m","\033[38;2;250;128;114m","\033[38;2;233;150;122m","\033[38;2;255;228;196m","\033[38;2;255;218;185m","\033[38;2;255;222;173m","\033[38;2;245;222;179m","\033[38;2;222;184;135m","\033[38;2;210;180;140m","\033[38;2;188;143;143m","\033[38;2;244;164;96m","\033[38;2;210;105;30m","\033[38;2;139;69;19m","\033[38;2;160;82;45m","\033[38;2;205;133;63m","\033[38;2;165;42;42m","\033[38;2;128;0;0m","\033[38;2;255;0;0m","\033[38;2;178;34;34m","\033[38;2;220;20;60m","\033[38;2;255;0;127m","\033[38;2;255;20;147m","\033[38;2;199;21;133m","\033[38;2;219;112;147m","\033[38;2;255;105;180m","\033[38;2;255;192;203m","\033[38;2;255;182;193m","\033[38;2;255;174;185m","\033[38;2;255;130;171m","\033[38;2;255;52;179m","\033[38;2;255;62;150m","\033[38;2;255;102;204m","\033[38;2;255;153;204m","\033[38;2;255;204;204m","\033[38;2;255;209;220m","\033[38;2;255;221;244m","\033[38;2;255;235;238m","\033[38;2;255;240;245m","\033[38;2;255;245;238m","\033[38;2;255;250;240m","\033[38;2;253;245;230m","\033[38;2;255;255;240m","\033[38;2;255;255;224m","\033[38;2;255;255;0m","\033[38;2;255;215;0m","\033[38;2;255;223;0m","\033[38;2;255;255;102m","\033[38;2;255;255;153m","\033[38;2;255;255;204m","\033[38;2;255;250;205m","\033[38;2;250;250;210m","\033[38;2;238;232;170m","\033[38;2;240;230;140m","\033[38;2;189;183;107m","\033[38;2;255;248;220m","\033[38;2;255;236;139m","\033[38;2;238;221;130m","\033[38;2;218;165;32m","\033[38;2;184;134;11m","\033[38;2;227;207;87m","\033[38;2;255;193;37m","\033[38;2;255;165;0m","\033[38;2;255;140;0m","\033[38;2;255;127;0m","\033[38;2;255;117;24m","\033[38;2;255;69;0m","\033[38;2;255;99;71m","\033[38;2;255;160;122m","\033[38;2;250;128;114m","\033[38;2;233;150;122m","\033[38;2;255;228;196m","\033[38;2;255;218;185m","\033[38;2;255;222;173m","\033[38;2;245;222;179m","\033[38;2;222;184;135m","\033[38;2;210;180;140m","\033[38;2;188;143;143m","\033[38;2;244;164;96m","\033[38;2;210;105;30m","\033[38;2;139;69;19m","\033[38;2;160;82;45m","\033[38;2;205;133;63m","\033[38;2;165;42;42m","\033[38;2;128;0;0m","\033[38;2;255;0;0m","\033[38;2;178;34;34m","\033[38;2;220;20;60m","\033[38;2;255;0;127m","\033[38;2;255;20;147m","\033[38;2;199;21;133m","\033[38;2;219;112;147m","\033[38;2;255;105;180m","\033[38;2;255;192;203m","\033[38;2;255;182;193m","\033[38;2;255;174;185m","\033[38;2;255;130;171m","\033[38;2;255;52;179m","\033[38;2;255;62;150m","\033[38;2;255;102;204m","\033[38;2;255;153;204m","\033[38;2;255;204;204m","\033[38;2;255;209;220m","\033[38;2;255;221;244m","\033[38;2;255;235;238m","\033[38;2;255;240;245m","\033[38;2;255;245;238m","\033[38;2;255;250;240m","\033[38;2;253;245;230m","\033[38;2;255;255;240m","\033[38;2;255;255;224m","\033[38;2;255;255;0m","\033[38;2;255;215;0m","\033[38;2;255;223;0m","\033[38;2;255;255;102m","\033[38;2;255;255;153m","\033[38;2;255;255;204m","\033[38;2;255;250;205m","\033[38;2;250;250;210m","\033[38;2;238;232;170m","\033[38;2;240;230;140m","\033[38;2;189;183;107m","\033[38;2;255;248;220m","\033[38;2;255;236;139m","\033[38;2;238;221;130m","\033[38;2;218;165;32m","\033[38;2;184;134;11m","\033[38;2;227;207;87m","\033[38;2;255;193;37m","\033[38;2;255;165;0m","\033[38;2;255;140;0m","\033[38;2;255;127;0m","\033[38;2;255;117;24m","\033[38;2;255;69;0m","\033[38;2;255;99;71m","\033[38;2;255;160;122m","\033[38;2;250;128;114m","\033[38;2;233;150;122m","\033[38;2;255;228;196m","\033[38;2;255;218;185m","\033[38;2;255;222;173m","\033[38;2;245;222;179m","\033[38;2;222;184;135m","\033[38;2;210;180;140m","\033[38;2;188;143;143m","\033[38;2;244;164;96m","\033[38;2;210;105;30m","\033[38;2;139;69;19m","\033[38;2;160;82;45m","\033[38;2;205;133;63m","\033[38;2;165;42;42m","\033[38;2;128;0;0m","\033[38;2;255;0;0m","\033[38;2;178;34;34m","\033[38;2;220;20;60m","\033[38;2;255;0;127m","\033[38;2;255;20;147m"]
    RESET = "\033[0m"
    COLOURS = random.choice(COLOUR)
    print(COLOURS + r""" 
 .--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--. 
/ .. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \
\ \/\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ \/ /
 \/ /`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'\/ / 
 / /\                                                                                                                        / /\ 
/ /\ \ ██╗  ██╗███████╗████████╗███████╗██╗   ██╗███████╗██╗  ██╗██╗    ███╗   ██╗ ██████╗     ████████╗ ██████╗ ██╗   ██╗  / /\ \
\ \/ / ██║ ██╔╝██╔════╝╚══██╔══╝██╔════╝██║   ██║██╔════╝██║ ██╔╝██║    ████╗  ██║██╔═══██╗    ╚══██╔══╝██╔═══██╗██║   ██║  \ \/ /
 \/ /  █████╔╝ █████╗     ██║   ███████╗██║   ██║█████╗  █████╔╝ ██║    ██╔██╗ ██║██║   ██║       ██║   ██║   ██║██║   ██║   \/ / 
 / /\  ██╔═██╗ ██╔══╝     ██║   ╚════██║██║   ██║██╔══╝  ██╔═██╗ ██║    ██║╚██╗██║██║   ██║       ██║   ██║   ██║██║   ██║   / /\ 
/ /\ \ ██║  ██╗███████╗   ██║   ███████║╚██████╔╝███████╗██║  ██╗██║    ██║ ╚████║╚██████╔╝       ██║   ╚██████╔╝╚██████╔╝  / /\ \
\ \/ / ╚═╝  ╚═╝╚══════╝   ╚═╝   ╚══════╝ ╚═════╝ ╚══════╝╚═╝  ╚═╝╚═╝    ╚═╝  ╚═══╝ ╚═════╝        ╚═╝    ╚═════╝  ╚═════╝   \ \/ /
 \/ /                                                                                                                        \/ / 
 / /\.--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--./ /\ 
/ /\ \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \/\ \
\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `' /
 `--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--' 
    """+ RESET)
    print("Welcome to Tower of Blood!")
    print("-" * 80)
    time.sleep(1)

def show_help():
    print("\n📘 Help Menu:")
    print("  w/a/s/d - Move")
    print("  j       - Descend a floor")
    print("  i       - View inventory and stats")
    print("  h       - Use health potion")
    print("  drop    - Drop a weapon or armour")
    print("  help    - Show this help menu")
    print("  q       - Quit the game\n")
    print("-----------------------------------------------")
    print("Minimap - Icons")
    print("P - Player")
    print("E - Enemies")
    print("B - Boss on Stair")
    print("S - Stairs without boss")
    print("K - Key that allows you to go through the exit")
    print("X - Exit")
    print(". - Normal room nothing inside")

def main():
    display_title()
    name = input("Enter your name: ")
    valid_classes = ["assassin", "mage", "archer", "warrior"]
    while True:
        print("\n⚔️ Class Base Stats:")
        print(f"{'Class':<10} {'HP':<5} {'Attack':<8} {'Defense':<8}")
        print("-" * 35)
        print(f"{'Assassin':<10} {100:<5} {20:<8} {5:<8}")
        print(f"{'Mage':<10} {100:<5} {25:<8} {3:<8}")
        print(f"{'Archer':<10} {100:<5} {18:<8} {6:<8}")
        print(f"{'Warrior':<10} {100:<5} {15:<8} {10:<8}")
        print("\nClass Weapon Bonuses:")
        print("- Warriors get +2 with swords")
        print("- Assassins get +2 with daggers")
        print("- Archers get +2 with bows")
        print("- Mages get +2 with staffs")
        cls = input("Choose your class: ").lower()
        if cls in valid_classes:
            cls = cls.capitalize()
            break
        print("Incorrect input. Please enter a valid class.")

    player = Player(name, cls)
    dungeon = Dungeon(10, 10)

    print("\nYour adventure begins...")
    print("Type 'help' at any time to see available commands.\n")
    time.sleep(1)

    while True:
        print(f"\nYou are at {player.position} on Floor {player.floor + 1}")
        room = dungeon.get_room(player.floor, player.position)
        if room is None:
            print("Invalid room! Resetting to safe position (0,0).")
            player.position = (0, 0)
            room = dungeon.get_room(player.floor, player.position)

        dungeon.draw_minimap(player.floor, player.position)
        print("📝", random.choice(room_stories))

        if room.has_enemy and room.enemy and room.enemy.hp > 0:
            if not battle(player, room.enemy):
                break
            room.has_enemy = False
            room.enemy = None
            player.update_buffs_after_battle()

        for item in room.items:
            print(f"You found a {item.replace('_', ' ')}!")
            player.pick_up_item(item)
        room.items.clear()

        if room.has_key:
            print("You found the key!")
            player.has_key = True
            room.has_key = False

        if (player.floor == dungeon.exit_floor_index and
            player.position == dungeon.exit_room_position and
            player.has_key):
            print("🎉 You found the dungeon exit and escaped! You win!")
            break

        player_input = input("Move (w/a/s/d), down (j), inventory (i), heal (h), drop (drop), help (help), quit (q): ").lower()
        dx, dy = 0, 0

        if player_input == 'q':
            print("You chose to leave the Tower. Game over.")
            break
        elif player_input == 'help':
            show_help()
            continue
        elif player_input == 'one_punch_man':
            player.hp = 1
            player.permanent_buffs["damage"] = 99999999999999999999999999999999999999999999999999
            player.permanent_buffs["defense"] = 99999999999999999999999999999999999999999999999999
            print("☠️ _GODMODE ACTIVATED_☠️")
            print("You now have 1 health but can one-shot everything! 🤣😂")
            continue
 
        elif player_input == 'w': dy = 1
        elif player_input == 's': dy = -1
        elif player_input == 'a': dx = -1
        elif player_input == 'd': dx = 1
        elif player_input == 'j':
            if player.floor > 0:
                player.floor -= 1
                if not dungeon.room_exists(player.floor, player.position):
                    player.position = (0, 0)
                print(f"You descend to Floor {player.floor + 1}.")
                continue
            print("You're already on the bottom floor.")
            continue
        elif player_input == 'i':
            player.show_inventory()
            continue
        elif player_input == 'h':
            player.use_health_potion()
            continue
        elif player_input == 'drop':
            player.drop_item()
            continue
        else:
            print("Invalid input.")
            continue

        new_pos = (player.position[0] + dx, player.position[1] + dy)
        if dungeon.room_exists(player.floor, new_pos):
            player.position = new_pos
        else:
            print("No room that way.")
            continue

        new_room = dungeon.get_room(player.floor, player.position)
        if new_room.is_stairs:
            if new_room.has_enemy and new_room.enemy and new_room.enemy.is_alive():
                print("\nThe stairs are guarded by a powerful enemy!")
                if battle(player, new_room.enemy):
                    new_room.has_enemy = False
                    new_room.enemy = None
                    player.update_buffs_after_battle()
                    if player.floor < len(dungeon.floors) - 1:
                        print("⬆️ You climb the stairs to the next floor.")
                        player.floor += 1
                        if not dungeon.room_exists(player.floor, player.position):
                            player.position = (0, 0)
            else:
                if player.floor < len(dungeon.floors) - 1:
                    print("⬆️ You climb the stairs to the next floor.")
                    player.floor += 1
                    if not dungeon.room_exists(player.floor, player.position):
                        player.position = (0, 0)

if __name__ == "__main__":
    main()